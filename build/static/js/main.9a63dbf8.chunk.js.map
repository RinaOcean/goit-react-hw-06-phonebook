{"version":3,"sources":["components/ContactsList/ContactList.jsx","components/ContactListItem/ContactsListItem.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["ContactsList","children","className","ContactsListItem","onDelete","contacts","map","id","name","number","type","onClick","ContactForm","state","nameInputId","nanoid","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","pattern","title","required","onChange","Component","Filter","App","filter","formSubmitHandler","data","some","contact","alert","prevState","filterHandler","deleteHandler","contactId","normalizedFilter","toLocaleLowerCase","filteredContactList","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a63dbf8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './ContactsList.scss';\r\n\r\nconst ContactsList = ({ children }) => (\r\n  <ul className=\"ContactsList\">{children}</ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport './ContactsListItem.scss';\r\n\r\nconst ContactsListItem = ({ onDelete, contacts }) => (\r\n  <>\r\n    {contacts.map(({ id, name, number }) => {\r\n      return (\r\n        <li key={id} className=\"ContactsListItem\">\r\n          {name}: {number}\r\n          <button type=\"button\" onClick={() => onDelete(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      );\r\n    })}\r\n  </>\r\n);\r\n\r\nContactsListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = nanoid();\r\n  numberInputId = nanoid();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit({ id: nanoid(), ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n        />\r\n        <label htmlFor={this.numberInputId}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.numberInputId}\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"Filter\">\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsList from './components/ContactsList';\nimport ContactsListItem from './components/ContactListItem';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nimport './App.scss';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.number,\n  };\n\n  state = {\n    contacts: [],\n    // contacts: [\n    //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    // ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const isInContacts = contact => {\n      return contact.name === data.name;\n    };\n\n    if (this.state.contacts.some(isInContacts)) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    } else\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, data],\n      }));\n  };\n\n  filterHandler = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  deleteHandler = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    const filteredContactList = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div className=\"phonebook\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n\n        {contacts.length > 0 ? (\n          <>\n            <Filter onChange={this.filterHandler} value={filter} />\n\n            <ContactsList>\n              <ContactsListItem\n                contacts={filteredContactList}\n                onDelete={this.deleteHandler}\n              />\n            </ContactsList>\n          </>\n        ) : (\n          <span>You have no contacts yet </span>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}